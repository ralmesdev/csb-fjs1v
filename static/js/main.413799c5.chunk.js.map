{"version":3,"sources":["App.js","index.js"],"names":["App","useState","status","setStatus","minimumNumber","setMinimumNumber","maximumNumber","setMaximumNumber","guess","setGuess","numberGuess","setNumberGuess","startGame","className","onClick","nextGuess","parseInt","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kLAGe,SAASA,IAEtB,MAA4BC,mBAAS,YAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAA0CF,mBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEA,EAA0CJ,mBAAS,KAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAGA,EAA0BN,mBAASK,EAAgB,GAAnD,mBAAOE,EAAP,KAAcC,EAAd,KAEA,EAAsCR,mBAAS,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KAEMC,EAAY,WAChBT,EAAU,WACVE,EAAiB,GACjBE,EAAiB,KACjBI,EAAe,GACfF,EAASH,EAAgB,IAG3B,GAAe,aAAXJ,EACF,OACE,wBAAQW,UAAU,iBAAiBC,QAASF,EAA5C,4BAwBJ,MAAe,QAAXV,EAEA,gCACE,sDACwBM,EADxB,SACqCE,EADrC,aAGA,wBAAQG,UAAU,iBAAiBC,QAASF,EAA5C,qCAQJ,sBAAKC,UAAU,MAAf,UACE,gDAAmBL,EAAnB,OACA,uBACA,0CACYJ,EADZ,eACuCE,KAEvC,uBACA,wBAAQO,UAAU,mBAAmBC,QAvCzB,WACdH,EAAeD,EAAc,GAC7BH,EAAiBC,GACjB,IAAMO,EAAYC,UAAUR,EAAQJ,GAAiB,GAAKA,EAC1DK,EAASM,IAmCP,qBAGA,wBAAQF,UAAU,mBAAmBC,QA5B3B,WACZX,EAAU,QA2BR,yBAGA,wBAAQU,UAAU,kBAAkBC,QAtCzB,WACbH,EAAeD,EAAc,GAC7BH,EAAiBC,GACjB,IAAMO,EAAYC,UAAUV,EAAgBE,GAAS,GAAKA,EAC1DC,EAASM,IAkCP,uBCvEN,IAAME,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACrB,EAAD,MAEFiB,I","file":"static/js/main.413799c5.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  //Start, loading, end\n  const [status, setStatus] = useState(\"entrance\");\n\n  const [minimumNumber, setMinimumNumber] = useState(0);\n\n  const [maximumNumber, setMaximumNumber] = useState(300);\n\n  //guess first number\n  const [guess, setGuess] = useState(maximumNumber / 2);\n\n  const [numberGuess, setNumberGuess] = useState(1);\n\n  const startGame = () => {\n    setStatus(\"running\");\n    setMinimumNumber(0);\n    setMaximumNumber(300);\n    setNumberGuess(1);\n    setGuess(maximumNumber / 2);\n  };\n\n  if (status === \"entrance\") {\n    return (\n      <button className=\"btn-start btns\" onClick={startGame}>\n        Start playing!\n      </button>\n    );\n  }\n\n  const smaller = () => {\n    setNumberGuess(numberGuess + 1);\n    setMaximumNumber(guess);\n    const nextGuess = parseInt((guess - minimumNumber) / 2) + minimumNumber;\n    setGuess(nextGuess);\n  };\n\n  const bigger = () => {\n    setNumberGuess(numberGuess + 1);\n    setMaximumNumber(guess);\n    const nextGuess = parseInt((maximumNumber - guess) / 2) + guess;\n    setGuess(nextGuess);\n  };\n\n  const gotIt = () => {\n    setStatus(\"end\");\n  };\n\n  if (status === \"end\") {\n    return (\n      <div>\n        <p>\n          I hit it this number {guess} with {numberGuess} guess!\n        </p>\n        <button className=\"btn-start btns\" onClick={startGame}>\n          Start playing Again!\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <p>Your number is {guess}?</p>\n      <br />\n      <p>\n        Minimum: {minimumNumber} / Maximum: {maximumNumber}\n      </p>\n      <br />\n      <button className=\"btn-smaller btns\" onClick={smaller}>\n        Smaller\n      </button>\n      <button className=\"btn-guessed btns\" onClick={gotIt}>\n        You got it!\n      </button>\n      <button className=\"btn-bigger btns\" onClick={bigger}>\n        Bigger\n      </button>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\n\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}